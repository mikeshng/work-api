# Copyright 2021 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: works.multicluster.x-k8s.io
spec:
  group: multicluster.x-k8s.io
  scope: Namespaced
  names:
    plural: works
    singular: work
    kind: Work
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      "schema":
        "openAPIV3Schema":
          description: Work is the Schema for the works API
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec defines the workload of a work.
              type: object
              properties:
                workload:
                  description: Workload represents the manifest workload to be deployed on spoke cluster
                  type: object
                  properties:
                    manifests:
                      description: Manifests represents a list of kuberenetes resources to be deployed on the spoke cluster.
                      type: array
                      items:
                        description: Manifest represents a resource to be deployed on spoke cluster
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                        x-kubernetes-embedded-resource: true
                workloadConfig:
                  description: WorkloadConfig represents the configuration of workload defined in workload field.
                  type: object
                  properties:
                    manifestConfigs:
                      description: ManifestConfigs represents the configuration of manifest defined in workload field.
                      type: array
                      items:
                        description: ManifestConfigOption represents the configuration of a manifest defined in workload field.
                        type: object
                        required:
                          - resourceIdentifier
                          - statusSyncRules
                        properties:
                          resourceIdentifier:
                            description: ResourceIdentifier represents the group, resource, name and namespace of a resoure. If this references a resource not created by this work, then the related configurations will not be applied.
                            type: object
                            properties:
                              group:
                                description: Group is the group of the resource.
                                type: string
                              kind:
                                description: Kind is the kind of the resource.
                                type: string
                              name:
                                description: Name is the name of the resource
                                type: string
                              namespace:
                                description: Namespace is the namespace of the resource, the resource is cluster scoped if the value is empty
                                type: string
                              ordinal:
                                description: Ordinal represents an index in manifests list, so the condition can still be linked to a manifest even thougth manifest cannot be parsed successfully.
                                type: integer
                              resource:
                                description: Resource is the resource type of the resource
                                type: string
                              version:
                                description: Version is the version of the resource.
                                type: string
                          statusSyncRules:
                            description: StatusSyncRules defines what resource status field should be returned.
                            type: array
                            items:
                              description: StatusSyncRule represents a resource status field should be returned.
                              type: object
                              required:
                                - type
                              properties:
                                jsonPaths:
                                  description: JsonPaths defines the json path under status field to be synced.
                                  type: array
                                  items:
                                    description: JsonPath represents a status field to be synced for a manifest using json path.
                                    type: object
                                    required:
                                      - name
                                      - path
                                    properties:
                                      name:
                                        description: Name represents the alias name for this field
                                        type: string
                                      path:
                                        description: Path represents the json path of the field under status. The path must point to a field with single value in the type of integer, bool or string. If the path points to a non-existing field, no value will be returned. If the path points to a structure, map or slice, no value will be returned and the status conddition of 'StatusSynced' will be set as false. Ref to https://kubernetes.io/docs/reference/kubectl/jsonpath/ on how to write a jsonPath.
                                        type: string
                                      version:
                                        description: Version is the version of the Kubernetes resource. If it is not specified, the resource with the semantically latest version is used to resolve the path.
                                        type: string
                                type:
                                  description: Type defines the option of how status can be returned. It can be JSONPaths or CommonFields. If the type is JSONPaths, user should specify the jsonPaths field If the type is CommonFields, certain common fields of status defined by a rule only for types in in k8s.io/api will be reported, If these status fields do not exist, no values will be reported.
                                  type: string
                                  enum:
                                    - CommonFields
                                    - JSONPaths
            status:
              description: status defines the status of each applied manifest on the spoke cluster.
              type: object
              required:
                - conditions
              properties:
                conditions:
                  description: 'Conditions contains the different condition statuses for this work. Valid condition types are: 1. Applied represents workload in Work is applied successfully on the spoke cluster. 2. Progressing represents workload in Work in the trasitioning from one state to another the on the spoke cluster. 3. Available represents workload in Work exists on the spoke cluster. 4. Degraded represents the current state of workload does not match the desired state for a certain period.'
                  type: array
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                    type: object
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        type: string
                        format: date-time
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        type: string
                        maxLength: 32768
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        type: integer
                        format: int64
                        minimum: 0
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        type: string
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        type: string
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                manifestConditions:
                  description: ManifestConditions represents the conditions of each resource in work deployed on spoke cluster.
                  type: array
                  items:
                    description: ManifestCondition represents the conditions of the resources deployed on spoke cluster
                    type: object
                    required:
                      - conditions
                    properties:
                      conditions:
                        description: Conditions represents the conditions of this resource on spoke cluster
                        type: array
                        items:
                          description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                          type: object
                          required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                              type: string
                              format: date-time
                            message:
                              description: message is a human readable message indicating details about the transition. This may be an empty string.
                              type: string
                              maxLength: 32768
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                              type: integer
                              format: int64
                              minimum: 0
                            reason:
                              description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                              type: string
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            status:
                              description: status of the condition, one of True, False, Unknown.
                              type: string
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              type: string
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      identifier:
                        description: resourceId represents a identity of a resource linking to manifests in spec.
                        type: object
                        properties:
                          group:
                            description: Group is the group of the resource.
                            type: string
                          kind:
                            description: Kind is the kind of the resource.
                            type: string
                          name:
                            description: Name is the name of the resource
                            type: string
                          namespace:
                            description: Namespace is the namespace of the resource, the resource is cluster scoped if the value is empty
                            type: string
                          ordinal:
                            description: Ordinal represents an index in manifests list, so the condition can still be linked to a manifest even thougth manifest cannot be parsed successfully.
                            type: integer
                          resource:
                            description: Resource is the resource type of the resource
                            type: string
                          version:
                            description: Version is the version of the resource.
                            type: string
                      statusSync:
                        description: StatusSync represents the values of the field synced back defined in statusSyncRules
                        type: object
                        properties:
                          values:
                            description: Values represents the synced value of the interested field.
                            type: array
                            items:
                              description: SyncValue represents the synced value of the sync field.
                              type: object
                              required:
                                - fieldValue
                                - name
                              properties:
                                fieldValue:
                                  description: Value is the value of the status field. The value of the status field can only be integer, string or boolean.
                                  type: object
                                  required:
                                    - type
                                  properties:
                                    boolean:
                                      description: Boolean is bool value when type is boolean.
                                      type: boolean
                                    integer:
                                      description: Integer is the integer value when type is integer.
                                      type: integer
                                      format: int64
                                    string:
                                      description: String is the string value when when type is string.
                                      type: string
                                    type:
                                      description: Type represents the type of the value, it can be integer, string or boolean.
                                      type: string
                                      enum:
                                        - Integer
                                        - String
                                        - Boolean
                                name:
                                  description: Name represents the alias name for this field. It is the same as what is specified in StatusSyncRule in the spec.
                                  type: string
                            x-kubernetes-list-map-keys:
                              - name
                            x-kubernetes-list-type: map

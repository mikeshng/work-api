# Copyright 2021 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: appliedworks.multicluster.x-k8s.io
spec:
  group: multicluster.x-k8s.io
  names:
    kind: AppliedWork
    listKind: AppliedWorkList
    plural: appliedworks
    singular: appliedwork
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      "schema":
        "openAPIV3Schema":
          description: AppliedWork represents an applied work on managed cluster that is placed on a managed cluster. An AppliedWork links to a work on a hub recording resources deployed in the managed cluster. When the agent is removed from managed cluster, cluster-admin on managed cluster can delete appliedwork to remove resources deployed by the agent. The name of the appliedwork must be in the format of {hash of hub's first kube-apiserver url}-{work name}
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec represents the desired configuration of AppliedWork.
              type: object
              required:
                - agentID
                - hubHash
                - workName
              properties:
                agentID:
                  description: AgentID represents the ID of the work agent who is to handle this AppliedWork.
                  type: string
                hubHash:
                  description: HubHash represents the hash of the first hub kube apiserver to identify which hub this AppliedWork links to.
                  type: string
                workName:
                  description: WorkName represents the name of the related work on the hub.
                  type: string
            status:
              description: Status represents the current status of AppliedWork.
              type: object
              properties:
                appliedResources:
                  description: AppliedResources represents a list of resources defined within the work that are applied. Only resources with valid GroupVersionResource, namespace, and name are suitable. An item in this slice is deleted when there is no mapped manifest in work.Spec or by finalizer. The resource relating to the item will also be removed from managed cluster. The deleted resource may still be present until the finalizers for that resource are finished. However, the resource will not be undeleted, so it can be removed from this list and eventual consistency is preserved.
                  type: array
                  items:
                    description: AppliedManifestResourceMeta represents the group, version, resource, name and namespace of a resource. Since these resources have been created, they must have valid group, version, resource, namespace, and name.
                    type: object
                    required:
                      - name
                      - resource
                      - version
                    properties:
                      group:
                        description: Group is the API Group of the Kubernetes resource, empty string indicates it is in core group.
                        type: string
                      name:
                        description: Name is the name of the Kubernetes resource.
                        type: string
                      namespace:
                        description: Name is the namespace of the Kubernetes resource, empty string indicates it is a cluster scoped resource.
                        type: string
                      resource:
                        description: Resource is the resource name of the Kubernetes resource.
                        type: string
                      uid:
                        description: UID is set on successful deletion of the Kubernetes resource by controller. The resource might be still visible on the managed cluster after this field is set. It is not directly settable by a client.
                        type: string
                      version:
                        description: Version is the version of the Kubernetes resource.
                        type: string
